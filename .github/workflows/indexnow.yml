name: 'IndexNow URL Submission'

on:
  schedule:
    - cron: '0 2 * * *'  # 매일 오전 2시에 실행
  workflow_dispatch:     # 수동 실행 옵션 추가

jobs:
  submit-urls:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install requests

      - name: Submit URLs to IndexNow (Naver & Bing)
        env:
          INDEXNOW_KEY: ${{ secrets.INDEXNOW_KEY }}
        run: |
          python3 -c "
import requests, xml.etree.ElementTree as ET, os

# 환경 변수 가져오기
indexnow_key = os.environ.get('INDEXNOW_KEY')
if not indexnow_key:
    raise ValueError('❌ ERROR: INDEXNOW_KEY is not set!')

# 사이트맵 URL 및 도메인 설정
sitemap_url = 'https://dowha.kim/sitemap.xml'
domain = 'dowha.kim'

# IndexNow 엔드포인트 리스트
endpoints = [
    'https://api.indexnow.org/indexnow',  # Bing
    'https://searchadvisor.naver.com/indexnow'  # Naver
]

try:
    # 사이트맵 가져오기
    response = requests.get(sitemap_url)
    if response.status_code != 200:
        print(f'❌ Failed to retrieve sitemap: {response.status_code}')
        exit(1)

    # XML 파싱
    root = ET.fromstring(response.content)
    namespace = {'ns': 'http://www.sitemaps.org/schemas/sitemap/0.9'}
    urls = [url.text for url in root.findall('ns:url/ns:loc', namespaces=namespace)]

    # IndexNow API 요청 생성
    payload = {
        'host': domain,
        'key': indexnow_key,
        'keyLocation': f'https://{domain}/{indexnow_key}.txt',
        'urlList': urls
    }

    headers = {'Content-Type': 'application/json; charset=utf-8'}

    # 각 엔드포인트에 URL 전송
    for endpoint in endpoints:
        res = requests.post(endpoint, headers=headers, json=payload)
        if res.status_code == 200:
            print(f'✅ Successfully submitted URLs to {endpoint}')
        else:
            print(f'❌ Failed to submit to {endpoint}. Status Code: {res.status_code}, Response: {res.text}')

except Exception as e:
    print(f'❌ Exception occurred: {e}')
    exit(1)
          "
