---
name: 'IndexNow URL Submission'

on:
  schedule:
    - cron: '0 0 * * *'  # 매일 한국 시간 오전 9시(UTC 00:00)에 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  submit-urls:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install requests

      - name: Submit URLs to IndexNow (Naver & Bing)
        env:
          INDEXNOW_KEY: ${{ secrets.INDEXNOW_KEY }}
        run: |
          python3 <<EOF
          import requests
          import xml.etree.ElementTree as ET
          import os

          indexnow_key = os.environ.get('INDEXNOW_KEY')
          if not indexnow_key:
              raise ValueError('❌ ERROR: INDEXNOW_KEY is not set!')

          sitemap_url = 'https://dowha.kim/sitemap.xml'

          # IndexNow 엔드포인트 리스트
          endpoints = {
              "IndexNow": "https://api.indexnow.org/indexnow?url={url}&key=" + indexnow_key,
              "Bing": "https://www.bing.com/indexnow?url={url}&key=" + indexnow_key,
              "Naver": "https://searchadvisor.naver.com/indexnow?url={url}&key=" + indexnow_key
          }

          try:
              # 최신 사이트맵 가져오기
              response = requests.get(sitemap_url)
              if response.status_code != 200:
                  print(f'❌ Failed to retrieve sitemap: {response.status_code}')
                  exit(1)

              # XML 파싱
              root = ET.fromstring(response.content)
              namespace = {'ns': 'http://www.sitemaps.org/schemas/sitemap/0.9'}
              urls = [url.text for url in root.findall('ns:url/ns:loc', namespaces=namespace)]

              # 최신 URL 몇 개만 선택 (예: 최근 5개)
              latest_urls = urls[-5:]  # 최근 5개만 전송

              for url in latest_urls:
                  for name, endpoint in endpoints.items():
                      full_url = endpoint.format(url=url)
                      res = requests.get(full_url)
                      if res.status_code == 200:
                          print(f'✅ {name} 성공: {url}')
                      else:
                          print(f'❌ {name} 실패: {url}, 상태 코드: {res.status_code}, 응답: {res.text}')

          except Exception as e:
              print(f'❌ Exception occurred: {e}')
              exit(1)
          EOF
